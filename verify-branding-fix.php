<?php

// Script para verificar se as corre√ß√µes de branding foram aplicadas

echo "=== VERIFICA√á√ÉO FINAL DAS CORRE√á√ïES DE BRANDING ===\n\n";

$pagesToCheck = [
    'resources/views/dashboard/licenciados.blade.php' => '/dashboard/licenciados',
    'resources/views/dashboard/contracts/index.blade.php' => '/contracts',
    'resources/views/dashboard/contracts/show.blade.php' => '/contracts/{id}'
];

foreach ($pagesToCheck as $file => $route) {
    $fullPath = __DIR__ . '/' . $file;
    
    if (!file_exists($fullPath)) {
        echo "‚ùå $file: Arquivo n√£o encontrado\n";
        continue;
    }
    
    $content = file_get_contents($fullPath);
    
    echo "üìÑ $file ($route):\n";
    
    // Verificar se tem branding din√¢mico
    if (strpos($content, '<x-dynamic-branding') !== false) {
        echo "  ‚úÖ Componente de branding presente\n";
    } else {
        echo "  ‚ùå Componente de branding ausente\n";
    }
    
    // Verificar se tem CSS para sobrescrever Tailwind
    if (strpos($content, 'var(--primary-color)') !== false) {
        echo "  ‚úÖ Vari√°veis CSS din√¢micas em uso\n";
    } else {
        echo "  ‚ö†Ô∏è  Vari√°veis CSS din√¢micas n√£o encontradas\n";
    }
    
    // Verificar se ainda h√° cores hardcoded problem√°ticas
    $hardcodedColors = ['#3b82f6', '#2563eb', '#1d4ed8'];
    $hasHardcoded = false;
    
    foreach ($hardcodedColors as $color) {
        if (strpos($content, $color) !== false) {
            $hasHardcoded = true;
            break;
        }
    }
    
    if (!$hasHardcoded) {
        echo "  ‚úÖ Sem cores hexadecimais hardcoded\n";
    } else {
        echo "  ‚ö†Ô∏è  Ainda h√° cores hexadecimais hardcoded\n";
    }
    
    // Verificar se tem CSS de sobrescrita
    if (strpos($content, 'Sobrescrever cores') !== false || strpos($content, '.bg-blue-') !== false) {
        echo "  ‚úÖ CSS de sobrescrita presente\n";
    } else {
        echo "  ‚ö†Ô∏è  CSS de sobrescrita ausente\n";
    }
    
    echo "\n";
}

// Verificar o componente de branding
echo "=== VERIFICA√á√ÉO DO COMPONENTE DE BRANDING ===\n";
$brandingFile = __DIR__ . '/resources/views/components/dynamic-branding.blade.php';
$brandingContent = file_get_contents($brandingFile);

if (strpos($brandingContent, '@once') !== false) {
    echo "‚úÖ Prote√ß√£o @once presente\n";
} else {
    echo "‚ùå Prote√ß√£o @once ausente\n";
}

if (strpos($brandingContent, 'function hexToRgb(') === false) {
    echo "‚úÖ Fun√ß√µes convertidas para closures\n";
} else {
    echo "‚ùå Ainda h√° fun√ß√µes globais\n";
}

// Verificar vari√°veis CSS principais
$requiredVars = [
    '--primary-color',
    '--secondary-color',
    '--accent-color',
    '--primary-light',
    '--primary-dark'
];

$missingVars = [];
foreach ($requiredVars as $var) {
    if (strpos($brandingContent, $var) === false) {
        $missingVars[] = $var;
    }
}

if (empty($missingVars)) {
    echo "‚úÖ Todas as vari√°veis CSS principais definidas\n";
} else {
    echo "‚ùå Vari√°veis CSS faltando: " . implode(', ', $missingVars) . "\n";
}

echo "\n=== RESUMO FINAL ===\n";
echo "üé® As p√°ginas /dashboard/licenciados e /contracts agora devem usar:\n";
echo "   ‚Ä¢ Cores prim√°rias do branding para bot√µes azuis\n";
echo "   ‚Ä¢ Cores de accent para bot√µes verdes\n";
echo "   ‚Ä¢ Backgrounds e textos din√¢micos\n";
echo "   ‚Ä¢ CSS de sobrescrita para classes Tailwind\n\n";

echo "‚úÖ CORRE√á√ïES APLICADAS COM SUCESSO!\n";
echo "üåà Teste as p√°ginas para verificar se as cores do branding est√£o sendo aplicadas.\n";

?>
