#!/bin/bash

# Script definitivo para corrigir erro do Laravel Pail em produ√ß√£o
# Erro: Class "Laravel\Pail\PailServiceProvider" not found

echo "üöÄ Corre√ß√£o DEFINITIVA - Laravel Pail em Produ√ß√£o"
echo "=================================================="
echo "üìÖ Data: $(date)"
echo "üìç Servidor: srv971263.hstgr.cloud"
echo ""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "artisan" ]; then
    echo "‚ùå ERRO: Arquivo 'artisan' n√£o encontrado!"
    echo "üí° Execute este script no diret√≥rio raiz do projeto Laravel"
    exit 1
fi

echo "‚úÖ Diret√≥rio do projeto Laravel confirmado"
echo ""

# ETAPA 1: CRIAR ESTRUTURA DE DIRET√ìRIOS NECESS√ÅRIA
echo "üìÅ ETAPA 1: Criando estrutura de diret√≥rios..."
echo "=============================================="

# Criar todos os diret√≥rios necess√°rios
directories=(
    "bootstrap/cache"
    "storage/app"
    "storage/app/public"
    "storage/framework"
    "storage/framework/cache"
    "storage/framework/cache/data"
    "storage/framework/sessions"
    "storage/framework/views"
    "storage/logs"
)

for dir in "${directories[@]}"; do
    if [ ! -d "$dir" ]; then
        mkdir -p "$dir"
        echo "   ‚úÖ Criado: $dir"
    else
        echo "   ‚úÖ Existe: $dir"
    fi
done

echo "‚úÖ ETAPA 1 conclu√≠da - Diret√≥rios criados"
echo ""

# ETAPA 2: CONFIGURAR PERMISS√ïES
echo "üîê ETAPA 2: Configurando permiss√µes..."
echo "====================================="

chmod -R 755 bootstrap/cache
chmod -R 755 storage
echo "   ‚úÖ Permiss√µes 755 aplicadas"

echo "‚úÖ ETAPA 2 conclu√≠da - Permiss√µes configuradas"
echo ""

# ETAPA 3: REMOVER CACHES PROBLEM√ÅTICOS
echo "üóëÔ∏è  ETAPA 3: Removendo caches problem√°ticos..."
echo "============================================="

# Remover caches espec√≠ficos que podem conter refer√™ncias ao Pail
cache_files=(
    "bootstrap/cache/services.php"
    "bootstrap/cache/packages.php"
    "bootstrap/cache/config.php"
    "bootstrap/cache/routes-v7.php"
    "bootstrap/cache/events.php"
)

for file in "${cache_files[@]}"; do
    if [ -f "$file" ]; then
        rm -f "$file"
        echo "   ‚úÖ Removido: $file"
    else
        echo "   ‚ÑπÔ∏è  N√£o existe: $file"
    fi
done

echo "‚úÖ ETAPA 3 conclu√≠da - Caches problem√°ticos removidos"
echo ""

# ETAPA 4: LIMPAR TODOS OS CACHES DO LARAVEL
echo "üßπ ETAPA 4: Limpando caches do Laravel..."
echo "========================================"

# Tentar limpar caches (pode falhar se Laravel n√£o conseguir inicializar)
echo "üîÑ Tentando limpar caches..."
if php artisan optimize:clear > /dev/null 2>&1; then
    echo "   ‚úÖ Caches limpos com optimize:clear"
else
    echo "   ‚ö†Ô∏è  optimize:clear falhou, tentando comandos individuais..."
    
    php artisan config:clear > /dev/null 2>&1 && echo "   ‚úÖ Config cache limpo" || echo "   ‚ùå Config cache falhou"
    php artisan route:clear > /dev/null 2>&1 && echo "   ‚úÖ Route cache limpo" || echo "   ‚ùå Route cache falhou"
    php artisan view:clear > /dev/null 2>&1 && echo "   ‚úÖ View cache limpo" || echo "   ‚ùå View cache falhou"
    php artisan cache:clear > /dev/null 2>&1 && echo "   ‚úÖ Application cache limpo" || echo "   ‚ùå Application cache falhou"
fi

echo "‚úÖ ETAPA 4 conclu√≠da - Caches do Laravel processados"
echo ""

# ETAPA 5: RECRIAR AUTOLOAD SEM PACOTES DE DESENVOLVIMENTO
echo "üîÑ ETAPA 5: Recriando autoload para produ√ß√£o..."
echo "=============================================="

echo "üîÑ Executando composer dump-autoload..."
if composer dump-autoload --optimize --no-dev > /dev/null 2>&1; then
    echo "   ‚úÖ Autoload recriado sem pacotes de desenvolvimento"
else
    echo "   ‚ö†Ô∏è  Tentando sem --no-dev..."
    if composer dump-autoload --optimize > /dev/null 2>&1; then
        echo "   ‚úÖ Autoload recriado (com pacotes de dev)"
    else
        echo "   ‚ùå Falha ao recriar autoload"
    fi
fi

echo "‚úÖ ETAPA 5 conclu√≠da - Autoload recriado"
echo ""

# ETAPA 6: TESTAR FUNCIONAMENTO DO LARAVEL
echo "üß™ ETAPA 6: Testando funcionamento do Laravel..."
echo "=============================================="

echo "üîÑ Testando comando artisan..."
if php artisan --version > /dev/null 2>&1; then
    echo "   ‚úÖ Laravel funcionando:"
    php artisan --version
else
    echo "   ‚ùå Laravel ainda com problemas"
    echo "   üí° Verificar logs: tail -f storage/logs/laravel.log"
fi

echo "‚úÖ ETAPA 6 conclu√≠da - Teste do Laravel"
echo ""

# ETAPA 7: RECRIAR CACHES DE PRODU√á√ÉO
echo "‚ö° ETAPA 7: Recriando caches de produ√ß√£o..."
echo "========================================"

echo "üîÑ Criando caches otimizados..."
if php artisan config:cache > /dev/null 2>&1; then
    echo "   ‚úÖ Config cache criado"
else
    echo "   ‚ùå Falha ao criar config cache"
fi

if php artisan route:cache > /dev/null 2>&1; then
    echo "   ‚úÖ Route cache criado"
else
    echo "   ‚ùå Falha ao criar route cache"
fi

if php artisan view:cache > /dev/null 2>&1; then
    echo "   ‚úÖ View cache criado"
else
    echo "   ‚ùå Falha ao criar view cache"
fi

echo "‚úÖ ETAPA 7 conclu√≠da - Caches de produ√ß√£o criados"
echo ""

# ETAPA 8: VERIFICA√á√ÉO FINAL
echo "üîç ETAPA 8: Verifica√ß√£o final..."
echo "==============================="

echo "üìä Estrutura de arquivos:"
echo "   Bootstrap cache:"
ls -la bootstrap/cache/ 2>/dev/null | head -3 || echo "   ‚ùå Diret√≥rio n√£o acess√≠vel"

echo "   Storage:"
ls -la storage/ 2>/dev/null | head -3 || echo "   ‚ùå Diret√≥rio n√£o acess√≠vel"

echo "üß™ Teste final do Laravel:"
if php artisan --version > /dev/null 2>&1; then
    echo "   ‚úÖ Laravel Framework funcionando"
    php artisan --version
else
    echo "   ‚ùå Laravel ainda com problemas"
fi

echo "‚úÖ ETAPA 8 conclu√≠da - Verifica√ß√£o final"
echo ""

# RESULTADO FINAL
echo "üéâ CORRE√á√ÉO FINALIZADA!"
echo "======================="
echo ""
echo "‚úÖ Diret√≥rios criados e configurados"
echo "‚úÖ Permiss√µes aplicadas (755)"
echo "‚úÖ Caches problem√°ticos removidos"
echo "‚úÖ Autoload recriado para produ√ß√£o"
echo "‚úÖ Caches de produ√ß√£o otimizados"
echo ""
echo "üîó URLs para testar:"
echo "   - Login: https://srv971263.hstgr.cloud/login"
echo "   - Dashboard: https://srv971263.hstgr.cloud/dashboard"
echo "   - Agenda: https://srv971263.hstgr.cloud/agenda"
echo "   - Nova Agenda: https://srv971263.hstgr.cloud/agenda/nova"
echo ""
echo "üß™ Como testar:"
echo "   1. Acesse as URLs acima"
echo "   2. Verifique se n√£o h√° mais erro do Pail"
echo "   3. Teste o salvamento de agenda"
echo "   4. Monitore logs se necess√°rio"
echo ""
echo "üí° Se ainda houver problemas:"
echo "   - Verificar logs: tail -f storage/logs/laravel.log"
echo "   - Verificar logs do servidor: tail -f /var/log/apache2/error.log"
echo "   - Contatar suporte do hosting se persistir"
echo ""
echo "üìã Informa√ß√µes t√©cnicas:"
echo "   - Laravel Pail removido do ambiente de produ√ß√£o"
echo "   - Autoload otimizado sem pacotes de desenvolvimento"
echo "   - Caches recriados especificamente para produ√ß√£o"
echo "   - Permiss√µes configuradas para servidor web"
echo ""
