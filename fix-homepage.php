<?php

// Script para corrigir problema da p√°gina principal
// Execute: php fix-homepage.php

echo "üîß Corrigindo problema da p√°gina principal...\n";

// 1. Verificar se estamos no diret√≥rio correto
if (!file_exists('artisan')) {
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do Laravel\n";
    exit(1);
}

// 2. Verificar configura√ß√µes atuais
echo "üìã Verificando configura√ß√µes atuais...\n";
echo "Diret√≥rio atual: " . getcwd() . "\n";
echo "APP_ENV: " . (getenv('APP_ENV') ?: 'n√£o definido') . "\n";
echo "APP_DEBUG: " . (getenv('APP_DEBUG') ?: 'n√£o definido') . "\n";

// 3. Verificar arquivo .env
echo "\n‚öôÔ∏è Verificando arquivo .env...\n";
if (file_exists('.env')) {
    $envContent = file_get_contents('.env');
    
    // Verificar configura√ß√µes importantes
    $importantConfigs = [
        'APP_NAME',
        'APP_ENV',
        'APP_DEBUG',
        'APP_URL',
        'DB_CONNECTION',
        'DB_HOST',
        'DB_PORT',
        'DB_DATABASE',
        'DB_USERNAME',
        'DB_PASSWORD'
    ];
    
    foreach ($importantConfigs as $config) {
        if (preg_match("/^$config=(.+)$/m", $envContent, $matches)) {
            echo "‚úÖ $config: " . $matches[1] . "\n";
        } else {
            echo "‚ùå $config: n√£o encontrado\n";
        }
    }
} else {
    echo "‚ùå Arquivo .env n√£o encontrado\n";
}

// 4. Verificar rotas
echo "\nüõ£Ô∏è Verificando rotas...\n";
$routesFile = 'routes/web.php';
if (file_exists($routesFile)) {
    $routesContent = file_get_contents($routesFile);
    
    // Verificar se h√° rota para a p√°gina principal
    if (strpos($routesContent, "Route::get('/',") !== false) {
        echo "‚úÖ Rota para p√°gina principal encontrada\n";
    } else {
        echo "‚ùå Rota para p√°gina principal n√£o encontrada\n";
    }
    
    // Verificar se h√° rota para dashboard
    if (strpos($routesContent, "Route::get('/dashboard',") !== false) {
        echo "‚úÖ Rota para dashboard encontrada\n";
    } else {
        echo "‚ùå Rota para dashboard n√£o encontrada\n";
    }
} else {
    echo "‚ùå Arquivo routes/web.php n√£o encontrado\n";
}

// 5. Verificar views
echo "\nüìÑ Verificando views...\n";
$viewsDir = 'resources/views';
if (is_dir($viewsDir)) {
    $views = [
        'welcome.blade.php',
        'dashboard.blade.php',
        'auth/login.blade.php'
    ];
    
    foreach ($views as $view) {
        if (file_exists($viewsDir . '/' . $view)) {
            echo "‚úÖ View encontrada: $view\n";
        } else {
            echo "‚ùå View n√£o encontrada: $view\n";
        }
    }
} else {
    echo "‚ùå Diret√≥rio resources/views n√£o encontrado\n";
}

// 6. Verificar controllers
echo "\nüéÆ Verificando controllers...\n";
$controllersDir = 'app/Http/Controllers';
if (is_dir($controllersDir)) {
    $controllers = [
        'Controller.php',
        'DashboardController.php'
    ];
    
    foreach ($controllers as $controller) {
        if (file_exists($controllersDir . '/' . $controller)) {
            echo "‚úÖ Controller encontrado: $controller\n";
        } else {
            echo "‚ùå Controller n√£o encontrado: $controller\n";
        }
    }
} else {
    echo "‚ùå Diret√≥rio app/Http/Controllers n√£o encontrado\n";
}

// 7. Verificar banco de dados
echo "\nüóÑÔ∏è Verificando banco de dados...\n";
try {
    $output = shell_exec('php artisan migrate:status 2>&1');
    if ($output) {
        echo "‚úÖ Comando migrate:status executado\n";
        if (strpos($output, 'No migrations found') !== false) {
            echo "‚ö†Ô∏è Nenhuma migra√ß√£o encontrada\n";
        } else {
            echo "‚úÖ Migra√ß√µes encontradas\n";
        }
    }
} catch (Exception $e) {
    echo "‚ùå Erro ao verificar migra√ß√µes: " . $e->getMessage() . "\n";
}

// 8. Verificar permiss√µes
echo "\nüîê Verificando permiss√µes...\n";
$paths = [
    'storage',
    'storage/framework',
    'storage/framework/views',
    'storage/framework/cache',
    'storage/framework/sessions',
    'storage/logs',
    'bootstrap/cache',
    'public'
];

foreach ($paths as $path) {
    if (is_dir($path)) {
        $perms = substr(sprintf('%o', fileperms($path)), -4);
        echo "‚úÖ $path - Permiss√µes: $perms\n";
    } else {
        echo "‚ùå $path - Diret√≥rio n√£o encontrado\n";
    }
}

// 9. Limpar caches
echo "\nüßπ Limpando caches...\n";
$commands = [
    'php artisan cache:clear',
    'php artisan config:clear',
    'php artisan route:clear',
    'php artisan view:clear'
];

foreach ($commands as $command) {
    echo "Executando: $command\n";
    $output = shell_exec($command . ' 2>&1');
    if ($output) {
        echo "Sa√≠da: $output\n";
    }
}

// 10. Regenerar caches
echo "\nüîÑ Regenerando caches...\n";
$regenerateCommands = [
    'php artisan config:cache',
    'php artisan route:cache'
];

foreach ($regenerateCommands as $command) {
    echo "Executando: $command\n";
    $output = shell_exec($command . ' 2>&1');
    if ($output) {
        echo "Sa√≠da: $output\n";
    }
}

// 11. Verificar se o problema foi resolvido
echo "\nüß™ Testando se o problema foi resolvido...\n";
$testCommands = [
    'php artisan --version',
    'php artisan route:list --path=/',
    'php artisan route:list --path=/dashboard'
];

foreach ($testCommands as $command) {
    echo "Executando: $command\n";
    $output = shell_exec($command . ' 2>&1');
    if ($output) {
        echo "Sa√≠da: $output\n";
    }
}

echo "\nüéâ Verifica√ß√£o da p√°gina principal conclu√≠da!\n";
echo "\nüìã Verifica√ß√µes realizadas:\n";
echo "- Configura√ß√µes do .env\n";
echo "- Rotas definidas\n";
echo "- Views dispon√≠veis\n";
echo "- Controllers existentes\n";
echo "- Banco de dados\n";
echo "- Permiss√µes\n";
echo "- Caches limpos e regenerados\n";
echo "\n‚úÖ Agora teste:\n";
echo "1. P√°gina principal: https://srv971263.hstgr.cloud/\n";
echo "2. Dashboard: https://srv971263.hstgr.cloud/dashboard\n";
echo "3. Login: https://srv971263.hstgr.cloud/login\n";
echo "\nüîç Se ainda houver problemas:\n";
echo "1. Verifique os logs: tail -f storage/logs/laravel.log\n";
echo "2. Verifique se o servidor web est√° rodando\n";
echo "3. Verifique se o PHP est√° configurado corretamente\n";
echo "4. Execute: chown -R www-data:www-data storage/\n";
echo "5. Execute: chown -R www-data:www-data bootstrap/cache/\n";
