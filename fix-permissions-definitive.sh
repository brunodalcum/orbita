#!/bin/bash

# Solu√ß√£o definitiva para problemas de permiss√µes em produ√ß√£o
# Execute este script no servidor de produ√ß√£o

echo "üîß Solu√ß√£o definitiva para permiss√µes em produ√ß√£o..."

# 1. Verificar se estamos no diret√≥rio correto
if [ ! -f "artisan" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do Laravel"
    exit 1
fi

echo "‚úÖ Diret√≥rio correto encontrado"

# 2. Parar servi√ßos web temporariamente
echo "‚èπÔ∏è Parando servi√ßos web..."
sudo systemctl stop apache2 2>/dev/null || true
sudo systemctl stop nginx 2>/dev/null || true
sudo systemctl stop php8.1-fpm 2>/dev/null || true
sudo systemctl stop php8.2-fpm 2>/dev/null || true

# 3. Limpar TODOS os caches
echo "üßπ Limpando todos os caches..."
php artisan cache:clear 2>/dev/null || true
php artisan config:clear 2>/dev/null || true
php artisan route:clear 2>/dev/null || true
php artisan view:clear 2>/dev/null || true
php artisan event:clear 2>/dev/null || true

# 4. Remover COMPLETAMENTE os diret√≥rios de cache
echo "üóëÔ∏è Removendo diret√≥rios de cache..."
rm -rf storage/framework/cache/*
rm -rf storage/framework/sessions/*
rm -rf storage/framework/views/*
rm -rf storage/logs/*
rm -rf bootstrap/cache/*

# 5. Recriar diret√≥rios com estrutura correta
echo "üìÅ Recriando estrutura de diret√≥rios..."
mkdir -p storage/framework/cache
mkdir -p storage/framework/sessions
mkdir -p storage/framework/views
mkdir -p storage/logs
mkdir -p bootstrap/cache

# 6. Definir permiss√µes MUITO permissivas temporariamente
echo "üîê Definindo permiss√µes permissivas..."
chmod -R 777 storage
chmod -R 777 bootstrap/cache

# 7. Descobrir o usu√°rio web correto
echo "üë§ Descobrindo usu√°rio web..."
WEB_USER=""
if id "www-data" &>/dev/null; then
    WEB_USER="www-data"
elif id "apache" &>/dev/null; then
    WEB_USER="apache"
elif id "nginx" &>/dev/null; then
    WEB_USER="nginx"
else
    WEB_USER=$(whoami)
fi

echo "Usu√°rio web identificado: $WEB_USER"

# 8. Definir propriet√°rio correto
echo "üë§ Definindo propriet√°rio como $WEB_USER..."
chown -R $WEB_USER:$WEB_USER storage
chown -R $WEB_USER:$WEB_USER bootstrap/cache

# 9. Testar escrita
echo "üß™ Testando permiss√µes de escrita..."
TEST_FILE="storage/framework/views/test_write.tmp"
if touch "$TEST_FILE" 2>/dev/null; then
    rm -f "$TEST_FILE"
    echo "‚úÖ Permiss√µes de escrita funcionando"
else
    echo "‚ùå Ainda h√° problemas de permiss√£o"
    echo "üîß Aplicando permiss√µes 777..."
    chmod -R 777 storage/framework/views
    chmod -R 777 storage/framework/cache
    chmod -R 777 storage/framework/sessions
    chmod -R 777 storage/logs
fi

# 10. Desabilitar cache de views temporariamente
echo "‚öôÔ∏è Desabilitando cache de views..."
if [ -f ".env" ]; then
    # Remover linhas existentes
    sed -i '/VIEW_CACHE_ENABLED/d' .env
    sed -i '/CACHE_DRIVER/d' .env
    # Adicionar novas configura√ß√µes
    echo "" >> .env
    echo "# Configura√ß√µes tempor√°rias para resolver problemas de permiss√£o" >> .env
    echo "VIEW_CACHE_ENABLED=false" >> .env
    echo "CACHE_DRIVER=array" >> .env
    echo "SESSION_DRIVER=array" >> .env
    echo "‚úÖ Cache de views desabilitado"
else
    echo "‚ö†Ô∏è Arquivo .env n√£o encontrado"
fi

# 11. Regenerar caches (sem view cache)
echo "üîÑ Regenerando caches..."
php artisan config:cache
php artisan route:cache
# N√ÉO executar view:cache para evitar problemas

# 12. Verificar se funcionou
echo "üß™ Testando Laravel..."
if php artisan --version > /dev/null 2>&1; then
    echo "‚úÖ Laravel funcionando"
else
    echo "‚ùå Problema com Laravel"
fi

# 13. Reiniciar servi√ßos web
echo "üîÑ Reiniciando servi√ßos web..."
sudo systemctl start apache2 2>/dev/null || true
sudo systemctl start nginx 2>/dev/null || true
sudo systemctl start php8.1-fpm 2>/dev/null || true
sudo systemctl start php8.2-fpm 2>/dev/null || true

# 14. Verifica√ß√£o final
echo ""
echo "üéâ Corre√ß√£o definitiva conclu√≠da!"
echo ""
echo "üìã Status das permiss√µes:"
echo "Storage:"
ls -la storage/ | head -3

echo ""
echo "Bootstrap cache:"
ls -la bootstrap/cache/

echo ""
echo "Teste final de escrita:"
if touch storage/framework/views/final_test.tmp 2>/dev/null; then
    rm -f storage/framework/views/final_test.tmp
    echo "‚úÖ Permiss√µes funcionando perfeitamente!"
else
    echo "‚ùå Ainda h√° problemas - contate o suporte do hosting"
fi

echo ""
echo "üîç Configura√ß√µes aplicadas:"
echo "- Cache de views: DESABILITADO"
echo "- Cache driver: ARRAY (em mem√≥ria)"
echo "- Permiss√µes: 777 (temporariamente)"
echo "- Propriet√°rio: $WEB_USER"
echo ""
echo "üìû Se ainda houver problemas:"
echo "1. Contate o suporte do hosting"
echo "2. Solicite corre√ß√£o de permiss√µes"
echo "3. Pe√ßa para definir $WEB_USER como propriet√°rio do storage/"
