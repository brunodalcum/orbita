#!/bin/bash

# Script para corrigir permiss√µes em produ√ß√£o
# Execute este script no servidor de produ√ß√£o

echo "üîß Corrigindo permiss√µes em produ√ß√£o..."

# 1. Verificar se estamos no diret√≥rio correto
if [ ! -f "artisan" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do Laravel"
    exit 1
fi

echo "‚úÖ Diret√≥rio correto encontrado"

# 2. Parar servi√ßos que podem estar usando os arquivos
echo "‚èπÔ∏è Parando servi√ßos..."
sudo systemctl stop apache2 2>/dev/null || true
sudo systemctl stop nginx 2>/dev/null || true
sudo systemctl stop php8.1-fpm 2>/dev/null || true
sudo systemctl stop php8.2-fpm 2>/dev/null || true

# 3. Limpar todos os caches
echo "üßπ Limpando caches..."
php artisan cache:clear
php artisan config:clear
php artisan route:clear
php artisan view:clear
php artisan event:clear

# 4. Remover diret√≥rios de cache problem√°ticos
echo "üóëÔ∏è Removendo diret√≥rios de cache..."
rm -rf storage/framework/cache/*
rm -rf storage/framework/sessions/*
rm -rf storage/framework/views/*
rm -rf bootstrap/cache/*

# 5. Recriar diret√≥rios com permiss√µes corretas
echo "üìÅ Recriando diret√≥rios..."
mkdir -p storage/framework/cache
mkdir -p storage/framework/sessions
mkdir -p storage/framework/views
mkdir -p storage/logs
mkdir -p bootstrap/cache

# 6. Definir permiss√µes corretas
echo "üîê Definindo permiss√µes..."

# Permiss√µes para diret√≥rios
chmod -R 755 storage
chmod -R 755 bootstrap/cache

# Permiss√µes espec√≠ficas para cache de views
chmod -R 777 storage/framework/views
chmod -R 777 storage/framework/cache
chmod -R 777 storage/framework/sessions
chmod -R 777 storage/logs

# 7. Definir propriet√°rio correto
echo "üë§ Definindo propriet√°rio..."

# Tentar diferentes usu√°rios web comuns
if id "www-data" &>/dev/null; then
    chown -R www-data:www-data storage
    chown -R www-data:www-data bootstrap/cache
    echo "‚úÖ Propriet√°rio definido como www-data"
elif id "apache" &>/dev/null; then
    chown -R apache:apache storage
    chown -R apache:apache bootstrap/cache
    echo "‚úÖ Propriet√°rio definido como apache"
elif id "nginx" &>/dev/null; then
    chown -R nginx:nginx storage
    chown -R nginx:nginx bootstrap/cache
    echo "‚úÖ Propriet√°rio definido como nginx"
else
    # Se n√£o conseguir identificar o usu√°rio web, usar o usu√°rio atual
    CURRENT_USER=$(whoami)
    chown -R $CURRENT_USER:$CURRENT_USER storage
    chown -R $CURRENT_USER:$CURRENT_USER bootstrap/cache
    echo "‚úÖ Propriet√°rio definido como $CURRENT_USER"
fi

# 8. Verificar se o usu√°rio web tem acesso
echo "üîç Verificando acesso do usu√°rio web..."

# Testar escrita no diret√≥rio de views
TEST_FILE="storage/framework/views/test_permissions.tmp"
if touch "$TEST_FILE" 2>/dev/null; then
    rm -f "$TEST_FILE"
    echo "‚úÖ Permiss√µes de escrita funcionando"
else
    echo "‚ùå Ainda h√° problemas de permiss√£o"
    
    # Tentar com sudo se dispon√≠vel
    if command -v sudo &> /dev/null; then
        echo "üîß Tentando com sudo..."
        sudo chmod -R 777 storage/framework/views
        sudo chown -R www-data:www-data storage/framework/views 2>/dev/null || true
        sudo chown -R apache:apache storage/framework/views 2>/dev/null || true
        sudo chown -R nginx:nginx storage/framework/views 2>/dev/null || true
    fi
fi

# 9. Regenerar caches
echo "üîÑ Regenerando caches..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

# 10. Verificar se funcionou
echo "üß™ Testando se as permiss√µes est√£o corretas..."
if php artisan view:clear 2>/dev/null; then
    echo "‚úÖ Cache de views funcionando corretamente"
else
    echo "‚ùå Ainda h√° problemas com cache de views"
    echo "üîß Tentando solu√ß√£o alternativa..."
    
    # Solu√ß√£o alternativa: desabilitar cache de views temporariamente
    echo "APP_VIEW_CACHE=false" >> .env
    echo "‚ö†Ô∏è Cache de views desabilitado temporariamente"
fi

# 11. Reiniciar servi√ßos web
echo "üîÑ Reiniciando servi√ßos web..."
sudo systemctl start apache2 2>/dev/null || true
sudo systemctl start nginx 2>/dev/null || true
sudo systemctl start php8.1-fpm 2>/dev/null || true
sudo systemctl start php8.2-fpm 2>/dev/null || true

# 12. Verifica√ß√£o final
echo ""
echo "üéâ Corre√ß√£o de permiss√µes conclu√≠da!"
echo ""
echo "üìã Verifica√ß√µes finais:"
echo "1. Permiss√µes do storage:"
ls -la storage/ | head -5

echo ""
echo "2. Permiss√µes do bootstrap/cache:"
ls -la bootstrap/cache/

echo ""
echo "3. Teste de escrita:"
if touch storage/framework/views/test_final.tmp 2>/dev/null; then
    rm -f storage/framework/views/test_final.tmp
    echo "‚úÖ Permiss√µes de escrita funcionando"
else
    echo "‚ùå Ainda h√° problemas - execute com sudo se necess√°rio"
fi

echo ""
echo "üîç Se ainda houver problemas:"
echo "1. Verifique o usu√°rio web: ps aux | grep -E '(apache|nginx|php-fpm)'"
echo "2. Verifique o grupo: groups \$(whoami)"
echo "3. Execute: sudo chmod -R 777 storage/framework/views"
echo "4. Execute: sudo chown -R www-data:www-data storage/framework/views"
