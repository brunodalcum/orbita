#!/bin/bash

echo "üîß CORRE√á√ÉO COMPLETA DE PERMISS√ïES - LARAVEL"
echo "============================================"
echo ""

# Obter o diret√≥rio atual
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

echo "üìÅ Diret√≥rio: $DIR"
echo ""

echo "1. üìÅ CRIANDO ESTRUTURA DE DIRET√ìRIOS..."

# Criar todos os diret√≥rios necess√°rios
mkdir -p "$DIR/storage/app/public"
mkdir -p "$DIR/storage/framework/cache/data"
mkdir -p "$DIR/storage/framework/sessions"
mkdir -p "$DIR/storage/framework/views"
mkdir -p "$DIR/storage/logs"
mkdir -p "$DIR/bootstrap/cache"

echo "   ‚úÖ Diret√≥rios criados"

echo ""
echo "2. üìÑ CRIANDO ARQUIVOS CR√çTICOS..."

# Criar arquivo de log se n√£o existir
if [ ! -f "$DIR/storage/logs/laravel.log" ]; then
    touch "$DIR/storage/logs/laravel.log"
    echo "   ‚úÖ laravel.log criado"
else
    echo "   ‚úÖ laravel.log j√° existe"
fi

echo ""
echo "3. üîß AJUSTANDO PERMISS√ïES..."

# Ajustar permiss√µes de diret√≥rios
chmod -R 755 "$DIR/storage/"
chmod -R 755 "$DIR/bootstrap/cache/"

# Ajustar permiss√µes de arquivos espec√≠ficos
chmod 644 "$DIR/storage/logs/laravel.log"

echo "   ‚úÖ Permiss√µes ajustadas"

echo ""
echo "4. üßπ LIMPANDO CACHES..."

# Limpar cache de views
rm -f "$DIR/storage/framework/views/"*
echo "   ‚úÖ Views cache limpo"

# Limpar bootstrap cache
rm -f "$DIR/bootstrap/cache/"*.php
echo "   ‚úÖ Bootstrap cache limpo"

# Limpar framework cache
rm -f "$DIR/storage/framework/cache/data/"*
echo "   ‚úÖ Framework cache limpo"

echo ""
echo "5. üß™ TESTANDO FUNCIONALIDADES..."

# Teste 1: Views cache
TEST_VIEW="$DIR/storage/framework/views/test_write.txt"
if echo "teste views" > "$TEST_VIEW" 2>/dev/null; then
    echo "   ‚úÖ Views cache: GRAV√ÅVEL"
    rm -f "$TEST_VIEW"
else
    echo "   ‚ùå Views cache: N√ÉO GRAV√ÅVEL"
fi

# Teste 2: Bootstrap cache
TEST_BOOTSTRAP="$DIR/bootstrap/cache/test_write.txt"
if echo "teste bootstrap" > "$TEST_BOOTSTRAP" 2>/dev/null; then
    echo "   ‚úÖ Bootstrap cache: GRAV√ÅVEL"
    rm -f "$TEST_BOOTSTRAP"
else
    echo "   ‚ùå Bootstrap cache: N√ÉO GRAV√ÅVEL"
fi

# Teste 3: Log file
LOG_FILE="$DIR/storage/logs/laravel.log"
if echo "[$(date)] testing.INFO: Teste de escrita" >> "$LOG_FILE" 2>/dev/null; then
    echo "   ‚úÖ Log file: GRAV√ÅVEL"
else
    echo "   ‚ùå Log file: N√ÉO GRAV√ÅVEL"
fi

echo ""
echo "6. üîç VERIFICA√á√ÉO FINAL..."

# Verificar permiss√µes finais
CRITICAL_DIRS=(
    "$DIR/storage/framework/views"
    "$DIR/bootstrap/cache"
    "$DIR/storage/logs"
)

ALL_GOOD=true

for dir in "${CRITICAL_DIRS[@]}"; do
    if [ -w "$dir" ]; then
        echo "   ‚úÖ $(basename "$dir"): OK"
    else
        echo "   ‚ùå $(basename "$dir"): PROBLEMA"
        ALL_GOOD=false
    fi
done

echo ""

if [ "$ALL_GOOD" = true ]; then
    echo "üéâ SUCESSO COMPLETO!"
    echo "‚úÖ Todos os diret√≥rios est√£o com permiss√µes corretas"
    echo "‚úÖ Todos os arquivos necess√°rios foram criados"
    echo "‚úÖ Cache foi limpo"
    echo "‚úÖ Testes de escrita passaram"
    echo ""
    echo "üîÑ TESTE AGORA: https://srv971263.hstgr.cloud/hierarchy/branding"
else
    echo "‚ö†Ô∏è  AINDA H√Å PROBLEMAS!"
    echo ""
    echo "üîß EXECUTE COMO ROOT:"
    echo "   sudo bash fix-permissions-complete.sh"
    echo ""
    echo "üîß OU COMANDOS MANUAIS:"
    echo "   sudo chown -R www-data:www-data $DIR/storage/"
    echo "   sudo chown -R www-data:www-data $DIR/bootstrap/cache/"
    echo "   sudo chmod -R 755 $DIR/storage/"
    echo "   sudo chmod -R 755 $DIR/bootstrap/cache/"
    echo "   sudo touch $DIR/storage/logs/laravel.log"
    echo "   sudo chmod 644 $DIR/storage/logs/laravel.log"
    echo ""
    echo "üîß PARA NGINX:"
    echo "   sudo chown -R nginx:nginx $DIR/storage/"
    echo "   sudo chown -R nginx:nginx $DIR/bootstrap/cache/"
fi

echo ""
echo "‚úÖ Corre√ß√£o completa finalizada!"
