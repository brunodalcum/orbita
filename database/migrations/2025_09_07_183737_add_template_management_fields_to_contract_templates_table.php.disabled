<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('contract_templates', function (Blueprint $table) {
            // Verificar se as colunas já existem antes de adicioná-las
            if (!Schema::hasColumn('contract_templates', 'variables')) {
                $table->json('variables')->nullable()->after('placeholders_json'); // Variáveis detectadas
            }
            
            if (!Schema::hasColumn('contract_templates', 'created_by')) {
                $table->unsignedBigInteger('created_by')->nullable()->after('is_active'); // Usuário que criou
            }
            
            if (!Schema::hasColumn('contract_templates', 'updated_by')) {
                $table->unsignedBigInteger('updated_by')->nullable()->after('created_by'); // Usuário que atualizou
            }
        });
        
        // Adicionar índices e foreign keys em uma operação separada
        Schema::table('contract_templates', function (Blueprint $table) {
            // Para SQLite, não verificar índices existentes
            if (config('database.default') !== 'sqlite') {
                // Verificar se os índices já existem
                $indexes = Schema::getConnection()->getDoctrineSchemaManager()
                    ->listTableIndexes('contract_templates');
                
                if (!isset($indexes['contract_templates_is_active_index'])) {
                    $table->index('is_active');
                }
                
                if (!isset($indexes['contract_templates_created_by_index'])) {
                    $table->index('created_by');
                }
            } else {
                // Para SQLite, apenas tentar adicionar os índices individualmente
                try {
                    $table->index('is_active');
                } catch (\Exception $e) {
                    // Ignorar se já existir
                }
                
                try {
                    $table->index('created_by');
                } catch (\Exception $e) {
                    // Ignorar se já existir
                }
            }
            
            // Verificar se as foreign keys já existem
            try {
                if (Schema::hasColumn('contract_templates', 'created_by')) {
                    $table->foreign('created_by')->references('id')->on('users')->onDelete('set null');
                }
            } catch (\Exception $e) {
                // Foreign key já existe, ignorar
            }
            
            try {
                if (Schema::hasColumn('contract_templates', 'updated_by')) {
                    $table->foreign('updated_by')->references('id')->on('users')->onDelete('set null');
                }
            } catch (\Exception $e) {
                // Foreign key já existe, ignorar
            }
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('contract_templates', function (Blueprint $table) {
            // Remover foreign keys
            $table->dropForeign(['created_by']);
            $table->dropForeign(['updated_by']);
            
            // Remover índices
            $table->dropIndex(['is_active']);
            $table->dropIndex(['created_by']);
            
            // Remover campos
            $table->dropColumn(['variables', 'created_by', 'updated_by']);
        });
    }
};